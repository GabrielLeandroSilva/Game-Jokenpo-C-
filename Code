using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;

namespace Jokempo
{


    class Program
    {


        static void Main(string[] args)
        {
            //DECLARAÇÃO DE VARIAVEIS E ARRAYS
            int[,] intro = new int[7, 20];
            string figura = "", figura2 = "";
            int TipoJogo = 0, escolha = 0, escolha2 = 0, b = 0;

            //=============================================================================||============================================================
            //Intro JokenPo
            for (int s = 0; s < 6; s++)
            {
                Console.Write("\t\t\t");
                for (int r = 0; r < 20; r++)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.Write("=");
                    intro[s, r] = 1;
                    Thread.Sleep(50);

                }
                Console.WriteLine("");
                if (intro[2, 0] == 1 && intro[3, 0] == 0)
                {
                    Intro();
                }

            }
            Thread.Sleep(1000);

//============================================================================||====================================================
        //Menu do Jogo: Tipo de jogo: 1 Jogador ou 2 jogadores ou Sair
        Parte1:
            int[] pontuacao = new int[3];
            string[] placar = new string[3];
            try
            {
                do
                {
                    Console.ForegroundColor = ConsoleColor.Gray;
                    Console.Clear();
                    TipoJogo = Menu(b) + 1;

                }
                while (TipoJogo < 1 || TipoJogo > 3);
            }
            catch (Exception)
            {
                goto Parte1;
            }

            // ============================================================================||============================================================
            // ============================================================================||============================================================

            // Decisão das opções: Opção 1

            if (TipoJogo == 1)
            {

                Random rd = new Random();
                int var1 = 0;

                for (int x = 0; x < pontuacao.Length; x++)
                {
                Parte2:
                    try
                    {
                    Repete:
                        do
                        {
                            Console.ForegroundColor = ConsoleColor.Yellow;
                            //Condição para Vitoria sem o desempate
                            if (x >= 2 && pontuacao[0] + pontuacao[1] == 0)
                            {
                                Console.Clear();
                                Console.ForegroundColor = ConsoleColor.Yellow;
                                Console.WriteLine("|===================|\n Placar: [{0}] [{1}] [{2}]\n|===================|\n\nVocê perdeu...", placar[0], placar[1], placar[2]);
                                Derrota();
                                Thread.Sleep(2000);
                                goto Parte1;
                            }
                            //Condição para Derrota sem o desempate
                            else if (x >= 2 && pontuacao[0] + pontuacao[1] == 2)
                            {
                                Console.Clear();
                                Console.ForegroundColor = ConsoleColor.Yellow;
                                Console.WriteLine("|===================|\n Placar: [{0}] [{1}] [{2}]\n|===================|\n\nVocê Ganhou, Parabens!!", placar[0], placar[1], placar[2]);
                                Vitoria();
                                Thread.Sleep(2000);
                                goto Parte1;
                            }
                            //Menu Opções do jogador
                            Console.Clear();
                            Console.WriteLine("|===================|\n Placar: [{0}] [{1}] [{2}]\n|===================|", placar[0], placar[1], placar[2]);
                            Console.Write("\n 1)Pedra.\n 2)Papel.\n 3)Tesoura.\n\nSelecione uma opção: ");
                            escolha = int.Parse(Console.ReadLine());
                        }
                        while (escolha < 1 || escolha > 3);

                        //=================================================================||=================================================================
                        // Resposta do jogador
                        switch (escolha)
                        {
                            case 1:
                                //Pedra
                                figura = "       _______\n    ---'   ____)\n          (_____)\n          (_____)\n          (____)\n    ---.__(___)";
                                break;
                            case 2:
                                //Papel
                                figura = "       ________\n    ---'    ____)____\n               ______)\n              _______)\n             _______)\n    ---.__________)";
                                break;
                            case 3:
                                //Tesoura
                                figura = "       _______\n    ---'   ____)____\n              ______)\n           __________)\n          (____)\n    ---.__(___)";
                                break;
                        }
                        //Resposta do COM
                        var1 = rd.Next(1, 4);
                        switch (var1)
                        {
                            case 1:
                                //Pedra
                                figura2 = "\t\t\t\t\t\t      _______\n\t\t\t\t\t\t     (____   '---\n\t\t\t\t\t\t    (_____)      \n\t\t\t\t\t\t    (_____)     \n\t\t\t\t\t\t     (____)      \n\t\t\t\t\t\t      (___)__.---";
                                break;
                            case 2:
                                //Papel
                                figura2 = "\t\t\t\t\t\t      ________\n\t\t\t\t\t\t ____(____    '---\n\t\t\t\t\t\t(______           \n\t\t\t\t\t\t(_______          \n\t\t\t\t\t\t (_______         \n\t\t\t\t\t\t   (__________.---";
                                break;
                            case 3:
                                //Tesoura
                                figura2 = "\t\t\t\t\t\t       _______\n\t\t\t\t\t\t  ____(____   '---\n\t\t\t\t\t\t (______\n\t\t\t\t\t\t(__________\n\t\t\t\t\t\t      (____)\n\t\t\t\t\t\t       (___)__.---";
                                break;
                        }

                        //====================================================================||====================================================================
                        //Regra do Jogo
                        //Condição de Empate
                        if (escolha == var1)
                        {
                            Jokenpo();
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.WriteLine(" \n\n===-Empate!-===\n\nSua Escolha:\n\n {0}\t\t A Escolha do COM: \n\n{1}.", figura, figura2);
                            Console.Beep(700, 200);
                            Thread.Sleep(3000);
                            goto Repete;
                        }
                        // Condição de Vitoria
                        else if (escolha == 1 && var1 == 3 || escolha == 2 && var1 == 1 || escolha == 3 && var1 == 2)
                        {
                            Jokenpo();
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.WriteLine(" \n\n===-Vitoria!-===\n\nSua Escolha:\n\n {0}\t\t A Escolha do COM: \n\n{1}.", figura, figura2);
                            pontuacao[x] = 1;
                            placar[x] = "V";
                            Vencer();
                            Thread.Sleep(3000);
                        }
                        //Condição de Derrota
                        else
                        {
                            Jokenpo();
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.WriteLine(" \n\n===-Derrota!-===\n\nSua Escolha:\n\n {0}\t\t A Escolha do COM: \n\n{1}.", figura, figura2);
                            pontuacao[x] = 0;
                            placar[x] = "X";
                            Derrota();
                            Thread.Sleep(3000);

                        }
                    }
                    catch (Exception)
                    {
                        goto Parte2;
                    }
                }
                //Condição para tirar o empate no placar
                if (pontuacao[0] + pontuacao[1] + pontuacao[2] <= 1)
                {
                    Console.Clear();
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    Console.WriteLine("|===================|\n Placar: [{0}] [{1}] [{2}]\n|===================|\n\nVocê perdeu...", placar[0], placar[1], placar[2]);
                    Derrota();
                    Thread.Sleep(2000);
                }
                else
                {
                    Console.Clear();
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    Console.WriteLine("|===================|\n Placar: [{0}] [{1}] [{2}]\n|===================|\n\nVocê Ganhou, Parabens!", placar[0], placar[1], placar[2]);
                    Vitoria();
                    Thread.Sleep(2000);
                }
                goto Parte1;
            }

            // ============================================================================||============================================================
            // ============================================================================||============================================================

            //Jogo Player vs Player
            if (TipoJogo == 2)
            {
                //Declaração de ARRAYS
                int[,] pontuacao2 = new int[2, 3];
                string[,] placar2 = new string[2, 3];

                for (int x = 0; x < 3; x++)
                {
                Repete2:
                    //Condição para Vitoria do jogador 2 sem o desempate
                    if (x >= 2 && pontuacao2[0, 0] + pontuacao2[0, 1] == 0)
                    {
                        Console.Clear();
                        Console.ForegroundColor = ConsoleColor.Blue;
                        Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|\n\nJogador 2 é o Vencedor!", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                        Vitoria();
                        Thread.Sleep(2000);
                        goto Parte1;
                    }
                    //Condição para Vitoria do jogador 1 sem o desempate
                    else if (x >= 2 && pontuacao2[0, 0] + pontuacao2[0, 1] == 2)
                    {
                        Console.Clear();
                        Console.ForegroundColor = ConsoleColor.Blue;
                        Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|\n\nJogador 1 é o Vencedor!", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                        Vitoria();
                        Thread.Sleep(2000);
                        goto Parte1;
                    }
                Parte3:
                    try
                    {
                        do
                        {
                            //Menu Opções do jogador 1
                            Console.ForegroundColor = ConsoleColor.Blue;
                            Console.Clear();
                            Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                            Console.Write("\n 1)Pedra.\n 2)Papel.\n 3)Tesoura.\n\nSelecione uma opção Jogador 1: ");
                            Console.ForegroundColor = ConsoleColor.Black;
                            escolha = int.Parse(Console.ReadLine());
                            Console.ForegroundColor = ConsoleColor.Blue;
                        }
                        while (escolha < 1 || escolha > 3);
                    }
                    catch (Exception)
                    {
                        goto Parte3;
                    }
                Parte4:
                    try
                    {
                        do
                        {
                            //Menu Opções do jogador 2
                            Console.ForegroundColor = ConsoleColor.Blue;
                            Console.Clear();
                            Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                            Console.Write("\n 1)Pedra.\n 2)Papel.\n 3)Tesoura.\n\nSelecione uma opção Jogador 2: ");
                            Console.ForegroundColor = ConsoleColor.Black;
                            escolha2 = int.Parse(Console.ReadLine());
                            Console.ForegroundColor = ConsoleColor.Blue;
                        }
                        while (escolha2 < 1 || escolha2 > 3);
                    }
                    catch (Exception)
                    {
                        goto Parte4;
                    }
                    //=========================================================================||===============================================================
                    // Resposta do jogador 1
                    switch (escolha)
                    {
                        case 1:
                            //Pedra
                            figura = "       _______\n    ---'   ____)\n          (_____)\n          (_____)\n          (____)\n    ---.__(___)";
                            break;
                        case 2:
                            //Papel
                            figura = "       ________\n    ---'    ____)____\n               ______)\n              _______)\n             _______)\n    ---.__________)";
                            break;
                        case 3:
                            //Tesoura
                            figura = "       _______\n    ---'   ____)____\n              ______)\n           __________)\n          (____)\n    ---.__(___)";
                            break;
                    }
                    //Resposta do jogador 2
                    switch (escolha2)
                    {
                        case 1:
                            //Pedra
                            figura2 = "\t\t\t\t\t\t      _______\n\t\t\t\t\t\t     (____   '---\n\t\t\t\t\t\t    (_____)      \n\t\t\t\t\t\t    (_____)     \n\t\t\t\t\t\t     (____)      \n\t\t\t\t\t\t      (___)__.---";
                            break;
                        case 2:
                            //Papel
                            figura2 = "\t\t\t\t\t\t      ________\n\t\t\t\t\t\t ____(____    '---\n\t\t\t\t\t\t(______           \n\t\t\t\t\t\t(_______          \n\t\t\t\t\t\t (_______         \n\t\t\t\t\t\t   (__________.---";
                            break;
                        case 3:
                            //Tesoura
                            figura2 = "\t\t\t\t\t\t       _______\n\t\t\t\t\t\t  ____(____   '---\n\t\t\t\t\t\t (______\n\t\t\t\t\t\t(__________\n\t\t\t\t\t\t      (____)\n\t\t\t\t\t\t       (___)__.---";
                            break;
                    }
                    //=========================================================================||===============================================================
                    //Regra do Jogo
                    //Condição de Empate
                    if (escolha == escolha2)
                    {
                        Jokenpo();
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.WriteLine(" \n\n===-Empate!-===\n\nA Escolha do Jogador 1:\n\n {0}.\t A Escolha do Jogador 2: \n\n{1}.", figura, figura2);
                        Console.Beep(700, 100);
                        Thread.Sleep(4000);
                        goto Repete2;
                    }
                    // Condição de Vitoria do Jogador 1
                    else if (escolha == 1 && escolha2 == 3 || escolha == 2 && escolha2 == 1 || escolha == 3 && escolha2 == 2)
                    {
                        Jokenpo();
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.WriteLine(" \n\n===-Vitoria do Jogador 1!-===\n\nA Escolha do Jogador 1:\n\n {0}.\t A Escolha do Jogador 2: \n\n{1}.", figura, figura2);
                        pontuacao2[0, x] = 1;
                        placar2[0, x] = "V";
                        pontuacao2[1, x] = 0;
                        placar2[1, x] = "X";
                        Vencer();
                        Thread.Sleep(4000);
                    }
                    // Condição de Vitoria do Jogador 2
                    else
                    {
                        Jokenpo();
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.Write(" \n\n===-Vitoria do Jogador 2!-===\n\nA Escolha do Jogador 1:\n\n {0}.\t A Escolha do Jogador 2: \n\n{1}.", figura, figura2);
                        pontuacao2[0, x] = 0;
                        placar2[0, x] = "X";
                        pontuacao2[1, x] = 1;
                        placar2[1, x] = "V";
                        Vencer();
                        Thread.Sleep(4000);
                    }
                }
                //Condição para tirar o empate no placar
                if (pontuacao2[0, 0] + pontuacao2[0, 1] + pontuacao2[0, 2] <= 1)
                {
                    Console.Clear();
                    Console.ForegroundColor = ConsoleColor.Blue;
                    Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|\nJogador 2 é o Vencedor!", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                    Vitoria();
                    Thread.Sleep(2000);
                }
                else
                {
                    Console.Clear();
                    Console.ForegroundColor = ConsoleColor.Blue;
                    Console.WriteLine("|============================|\n|1)Jogador Placar: [{0}] [{1}] [{2}]\n|============================|\n|============================|\n|2)Jogador Placar: [{3}] [{4}] [{5}]\n|============================|\nJogador 1 é o Vencedor!", placar2[0, 0], placar2[0, 1], placar2[0, 2], placar2[1, 0], placar2[1, 1], placar2[1, 2]);
                    Vitoria();
                    Thread.Sleep(2000);
                }
                goto Parte1;
            }
            //===================================================================||==============================================================
            //Menu de Sair
            else if (TipoJogo == 3)
            {
                int op = 0;
            Sair:
                try
                {
                    do
                    {
                        Console.Clear();
                        op = Menu_Fim(b) + 1;
                    }
                    while (op < 1 || op > 2);
                    if (op == 1)
                    {
                        Fim();
                    }
                    else
                    {
                        goto Parte1;
                    }
                }
                catch (Exception)
                {
                    goto Sair;
                }

            }

        }
        //=======================================-Funções aplicadas no projeto-================================================\\
        static void Vitoria()
        {
            //Musica para Vitoria do Jogo
            Console.Beep(600, 100);
            Thread.Sleep(10);
            Console.Beep(600, 100);
            Thread.Sleep(10);
            Console.Beep(800, 500);

        }

        static void Derrota()
        {
            //Musica de Derrota do Jogo
            Console.Beep(600, 100);
            Thread.Sleep(10);
            Console.Beep(300, 500);
        }

        static void Vencer()
        {
            //Musica de vitoria da partida
            Console.Beep(600, 200);
            Thread.Sleep(10);
            Console.Beep(900, 300);
        }
        static void Jokenpo()
        {
            //Escrita do Jokenpo durante a partida
            Console.Write("Jo...");
            Thread.Sleep(1000);
            Console.Write("ken...");
            Thread.Sleep(1000);
            Console.Write("Pô!");
        }

        static void Intro()
        {
            //Escrita e musica da introdução
            Console.ForegroundColor = ConsoleColor.Gray;
            Console.Write("\t\t\t|     J");
            Console.Beep(700, 250);
            Thread.Sleep(100);
            Console.Write("o");
            Thread.Sleep(100);
            Console.Write("k");
            Thread.Sleep(100);
            Console.Write("e");
            Console.Beep(700, 400);
            Thread.Sleep(100);
            Console.Write("n");
            Thread.Sleep(200);
            Console.Write("p");
            Thread.Sleep(100);
            Console.WriteLine("ô      |");
            Console.Beep(900, 100);
            Thread.Sleep(100);

        }
        static void Fim()
        {
            //Escrita e Musica do fim do jogo
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write("\t\t\t|     F");
            Console.Beep(900, 50);
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.Write("e");
            Console.Beep(800, 50);
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("c");
            Console.Beep(700, 50);
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.Write("h");
            Console.Beep(600, 50);
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.Gray;
            Console.Write("a");
            Console.Beep(500, 25);
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.DarkGreen;
            Console.Write("n");
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.Write("d");
            Thread.Sleep(100);
            Console.ForegroundColor = ConsoleColor.DarkRed;
            Console.WriteLine("o      |");
            Thread.Sleep(150);
        }

        
        static int Menu(int b)
        {
            // Estrutura do menu com utilização das setas direcionais para a escolha das opções
            short ItemAtual = 0, i;
            ConsoleKeyInfo Chave;
            string[] menuItems = { "Jogador vs COM", "Jogador vs Jogador", "Sair\n" };
            do
            {
                Console.Clear();
                Console.WriteLine("|===========-Jokenpô-===========|");
                for (i = 0; i < menuItems.Length; i++)
                {
                    if (ItemAtual == i)
                    {
                        Console.Write(">> ");
                        Console.WriteLine(menuItems[i]);
                    }
                    else
                    {
                        Console.WriteLine(menuItems[i]);
                    }
                }
                Console.Write("Selecione uma opção acima: ");
                Chave = Console.ReadKey(true);
                if (Chave.Key.ToString() == "DownArrow")
                {
                    ItemAtual++;
                    if (ItemAtual > menuItems.Length - 1) ItemAtual = 0;
                }
                else if (Chave.Key.ToString() == "UpArrow")
                {
                    ItemAtual--;
                    if (ItemAtual < 0) ItemAtual = Convert.ToInt16(menuItems.Length - 1);
                }
            } while (Chave.KeyChar != 13);
            return ItemAtual;
        }

        static int Menu_Fim(int b)
        {
            // Estrutura do menu com utilização das setas direcionais para a escolha das opções
            short ItemAtual = 0, i;
            ConsoleKeyInfo Chave;
            string[] menuItems = { "Sim", "Não\n" };
            do
            {
                Console.Clear();
                Console.WriteLine("Deseja Realmente sair?");
                for (i = 0; i < menuItems.Length; i++)
                {
                    if (ItemAtual == i)
                    {
                        Console.Write(">> ");
                        Console.WriteLine(menuItems[i]);
                    }
                    else
                    {
                        Console.WriteLine(menuItems[i]);
                    }
                }
                Console.Write("Selecione uma opção acima: \n\n");
                Chave = Console.ReadKey(true);
                if (Chave.Key.ToString() == "DownArrow")
                {
                    ItemAtual++;
                    if (ItemAtual > menuItems.Length - 1) ItemAtual = 0;
                }
                else if (Chave.Key.ToString() == "UpArrow")
                {
                    ItemAtual--;
                    if (ItemAtual < 0) ItemAtual = Convert.ToInt16(menuItems.Length - 1);
                }
            } while (Chave.KeyChar != 13);
            return ItemAtual;
        }

    }

}






